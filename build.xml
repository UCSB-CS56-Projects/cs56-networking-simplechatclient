<project default="compile">

  <!-- build.xml for CP1, S12, CS56
       name: Khang Bui-->
 
  <property environment="env"/> <!-- load the environment variables --> 
  <property name="webRoot" value="${env.HOME}/public_html" />
  <property name="webBaseURL" value="http://www.cs.ucsb.edu/~${env.USER}" />
  <property name="course" value="cs56"/>
  <property name="quarter" value="S12"/>
  <property name="issueNum" value="0000781"/>
  <property name="projectName" value="${course}_${quarter}_${issueNum}" />
  <property name="projectPath" value="${course}/${quarter}/issues/${issueNum}"/>
  <property name="javadocDest" value="${webRoot}/${projectPath}/javadoc" /> 
  <property name="javadocURL" value="${webBaseURL}/${projectPath}/javadoc" /> 
  <property name="jwsDest" value="${webRoot}/${projectPath}/jws" /> 
  <property name="jwsURL" value="${webBaseUrl}/${projectPath}/jws" /> 

  <target name="compile" description="compile my code">
      <mkdir dir="build" />
      <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source" includeantruntime="false">                                                                                                          
                                                                                                                                              
     <classpath>                                                                                                                              
         <pathelement location="build"/>                                                                                                          
         <pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>                                                   
     </classpath>                                                                                                                             
    </javac>       

  </target>

  <target name="run" description="run the chat server">
     <java classname="edu.ucsb.cs56.S12.ktbui.Chat_Server" classpath="build"  />
   
   </target>

  <target name="runclient" description="run the client ">
    
     <java classname="edu.ucsb.cs56.S12.ktbui.Chat_GUI" classpath="build" fork ="true" />
   </target>

<target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" quiet="true" />        
  </target>

<target name="javadoc" depends="compile">                                                        
                                                                                                  
   <delete dir="javadoc" quiet="true" />                                                          
   <javadoc destdir="javadoc" author="true" version="true" use="true" >                          
      <fileset dir="src" includes="**/*.java"/>                                                     
      <classpath>                                                                                 
          <pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>      
     </classpath>                                                                                 
   </javadoc>                                                                                     
                                                                                                  
   <!-- delete the old javadoc -->                                                                
   <delete quiet="true" dir="${javadocDest}" />                                                   
                                                                                                  
   <!-- copy everything you just made to the javadoc destination, and then make it readable -->   
                                                                                                  
   <copy todir="${javadocDest}" >                                                                 
     <fileset dir="javadoc"/>                                                                     
   </copy>                                                                                        
                                                                                                  
   <!-- Note: this only does the chmod command on the                                             
        javadoc subdirectory and its contents.  You MIGHT have to                                 
        MANUALLY do the chmod on the parent directories.  However,                                
        you should only need to do that once. -->                                                 
                                                                                                  
   <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" />                            
   <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" />                         
   <echo>Javadoc deployed to ${javadocURL}</echo>                                                 
                                                                                                  
 </target>        

  <target name="test" depends="compile">

    <junit haltonerror="no" haltonfailure="no">
       <classpath>
         <pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>
         <pathelement location="build"/>
       </classpath>

       <batchtest fork="yes">
          <fileset dir="src">
            <!-- this will pick up every class with a name ending in Test -->
            <include name="*Test.java"/>
          </fileset>
       </batchtest>

        <formatter type="plain" usefile="false" /> 
       
    </junit>
  </target>

<target name="jar" depends="compile">                                          
   <mkdir dir="dist" />                                                         
   <jar destfile="dist/${projectName}.jar" basedir="build"> 
     <manifest>                                                                 
     <attribute name="Main-Class" value="Chat_GUI"/>                 
    </manifest>  
   </jar>                                                    
  </target>  



<target name="publish" depends="jar,javadoc,download,jws,linenumbers">                           
   <mkdir dir="${webRoot}/${projectPath}" /> 
   <delete dir="$webRoot}/${projectPath}/browse" />
   <mkdir dir="${webRoot}/${projectPath}/browse" /> 
   <delete dir="${webRoot}/${projectPath}/download" /> 
   <mkdir dir="${webRoot}/${projectPath}/download" /> 
                                                                                 
   <copy file="html/index.html" todir="${webRoot}/${projectPath}"/> 
   <copy file="numberedsource.txt" todir="${webRoot}/${projectPath}/browse"/>
                                                                                  
   <copy todir="${webRoot}/${projectPath}/download" >                                 <fileset dir="download"/>                                         
     <fileset dir="dist" />                                                        </copy>   

   <copy file="build.xml" todir="${webRoot}/${projectPath}/browse"/>
  
   <copy todir="${webRoot}/${projectPath}/browse/src">
     <fileset dir="src"/>
   </copy>
   
                                                                                  
   <chmod dir="${webRoot}/${projectPath}"                                         
          perm="755" type="both" includes="**/*"/>                                
                                                                                  
   <echo>Project published to ${webBaseURL}/${projectPath}</echo>                 
 </target>      

<target name="download">                                          

 
                                                                                  <delete quiet="true">                                                           
     <fileset dir="temp" includes="**/*" />                                       
     <fileset dir="download" includes="**/*" />                                    
  </delete>                                                                       
                                                               
  <!-- create the directories we'll need to stage the zip file and tarballs -->
                   
  <mkdir dir="download" />                                                         
  <mkdir dir="temp" />                                                            
  <mkdir dir="temp/${projectName}" />                                             
                                                         

  <copy todir="temp/${projectName}">                                              
    <fileset dir="."                                                              
     excludes="build/**, javadoc/**, **/*~, temp/**, dist/**, download/**"/>       
  </copy>                                                                         
                                                                                  
  <!-- create the tar file from the temp directory -->

  <tar destfile="temp/${projectName}.tar"                                         
       basedir="temp"                                                             
       includes="${projectName}/**"                                               
   />                                                                             
  
 <!-- compress the tar file into a tarball (using "gzip") -->
                                                                                
  <gzip zipfile="download/${projectName}.tgz" src="temp/${projectName}.tar" />                                          
 
 <!-- create a zip file -->
                                                 
 <zip destfile="download/${projectName}.zip"                                      
       basedir="temp"                                                             
       includes="${projectName}/**"                                               
  />                           

  <!-- Now we have the tarball and zip file in the download 
          subdirectory, so we are finished with the temp directory -->                                                   
                                                                                  
  <delete quiet="true">                                                           
     <fileset dir="temp" includes="**/*"/>                                        
  </delete>                                                                       
                                                                                  
 </target>     

<target name="jws" depends="compile,jar">

   <delete dir="${webRoot}/CP/jws" />
   <mkdir dir="${webRoot}/CP/jws" />

   <copy todir="${jwsDest}" file="dist/${projectName}.jar" />
   <copy todir="${jwsDest}" >
       <fileset dir="jws" includes="*.html"/>
       <fileset dir="jws" includes="*.jnlp"/>
       <fileset dir="jws" includes="*.png"/>
       <fileset dir="jws" includes=".htaccess"/>
   </copy>
   <echo>Java web start at ${jwsURL}</echo>
 </target>

<target name="linenumbers" description="create one large text file containing all source files copied into it">
<exec executable="bash">
<arg value="-c"/>
<arg value='tree -ifQ src | grep \.java\"$ | xargs pr -n > numberedsource.txt'/>
</exec>
</target>



    
</project>
